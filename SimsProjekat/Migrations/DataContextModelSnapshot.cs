// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimsProjekat.Resources.DBAccess;

#nullable disable

namespace SimsProjekat.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("SimsProjekat.Domain.Models.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HotelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxGuestNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Apartment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is a sample description for apartment 1.",
                            HotelId = 1,
                            MaxGuestNumber = 4,
                            Name = "Sample Apartment 1",
                            RoomCount = 2
                        },
                        new
                        {
                            Id = 2,
                            Description = "This is a sample description for apartment 2.",
                            HotelId = 1,
                            MaxGuestNumber = 6,
                            Name = "Sample Apartment 2",
                            RoomCount = 3
                        },
                        new
                        {
                            Id = 3,
                            Description = "This is a sample description for apartment 3.",
                            HotelId = 2,
                            MaxGuestNumber = 2,
                            Name = "Sample Apartment 3",
                            RoomCount = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "This is a sample description for apartment 4.",
                            HotelId = 2,
                            MaxGuestNumber = 8,
                            Name = "Sample Apartment 4",
                            RoomCount = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "This is a sample description for apartment 5.",
                            HotelId = 3,
                            MaxGuestNumber = 2,
                            Name = "Sample Apartment 5",
                            RoomCount = 1
                        },
                        new
                        {
                            Id = 6,
                            Description = "This is a sample description for apartment 6.",
                            HotelId = 3,
                            MaxGuestNumber = 4,
                            Name = "Sample Apartment 6",
                            RoomCount = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "This is a sample description for apartment 7.",
                            HotelId = 1,
                            MaxGuestNumber = 4,
                            Name = "Sample Apartment 7",
                            RoomCount = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "This is a sample description for apartment 8.",
                            HotelId = 3,
                            MaxGuestNumber = 4,
                            Name = "Sample Apartment 8",
                            RoomCount = 2
                        });
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConstructionYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerJmbg")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerJmbg");

                    b.ToTable("Hotel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConstructionYear = 2000,
                            Name = "Deluxe Hotel",
                            OwnerJmbg = "4444444444444",
                            Rating = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            ConstructionYear = 1995,
                            Name = "Hotel Moscow",
                            OwnerJmbg = "4444444444444",
                            Rating = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            ConstructionYear = 1990,
                            Name = "Hotel Paradise",
                            OwnerJmbg = "5555555555555",
                            Rating = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            ConstructionYear = 1980,
                            Name = "Hotel Belgrade",
                            OwnerJmbg = "4444444444444",
                            Rating = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            ConstructionYear = 1960,
                            Name = "Yugoslavia",
                            OwnerJmbg = "5555555555555",
                            Rating = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            ConstructionYear = 2005,
                            Name = "Hotel Sheraton",
                            OwnerJmbg = "4444444444444",
                            Rating = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            ConstructionYear = 1990,
                            Name = "Hilton",
                            OwnerJmbg = "4444444444444",
                            Rating = 5,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            ConstructionYear = 1990,
                            Name = "Hotel Vojvodina",
                            OwnerJmbg = "4444444444444",
                            Rating = 2,
                            Status = 0
                        });
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GuestJmbg")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RejectionReason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("GuestJmbg");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApartmentId = 1,
                            GuestJmbg = "1111111111111",
                            RejectionReason = "",
                            ReservationDate = new DateTime(2024, 1, 12, 11, 9, 19, 53, DateTimeKind.Local).AddTicks(3092),
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            ApartmentId = 2,
                            GuestJmbg = "2222222222222",
                            RejectionReason = "",
                            ReservationDate = new DateTime(2024, 1, 12, 11, 9, 19, 53, DateTimeKind.Local).AddTicks(3131),
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            ApartmentId = 3,
                            GuestJmbg = "1111111111111",
                            RejectionReason = "",
                            ReservationDate = new DateTime(2024, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            ApartmentId = 2,
                            GuestJmbg = "2222222222222",
                            RejectionReason = "",
                            ReservationDate = new DateTime(2024, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            ApartmentId = 1,
                            GuestJmbg = "2222222222222",
                            RejectionReason = "",
                            ReservationDate = new DateTime(2024, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        });
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.User", b =>
                {
                    b.Property<string>("Jmbg")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Jmbg");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Admin", b =>
                {
                    b.HasBaseType("SimsProjekat.Domain.Models.User");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            Jmbg = "1234567890123",
                            Email = "admin1@gmail.com",
                            FirstName = "Marko",
                            IsBlocked = false,
                            LastName = "Markovic",
                            Password = "admin1",
                            PhoneNumber = "123456789",
                            UserType = 0
                        },
                        new
                        {
                            Jmbg = "4567890123456",
                            Email = "admin2@gmail.com",
                            FirstName = "Pera",
                            IsBlocked = false,
                            LastName = "Peric",
                            Password = "admin2",
                            PhoneNumber = "123456789",
                            UserType = 0
                        });
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Guest", b =>
                {
                    b.HasBaseType("SimsProjekat.Domain.Models.User");

                    b.ToTable("Guest");

                    b.HasData(
                        new
                        {
                            Jmbg = "1111111111111",
                            Email = "guest1@gmail.com",
                            FirstName = "Mara",
                            IsBlocked = false,
                            LastName = "Maric",
                            Password = "guest1",
                            PhoneNumber = "123456789",
                            UserType = 1
                        },
                        new
                        {
                            Jmbg = "2222222222222",
                            Email = "guest2@gmail.com",
                            FirstName = "Nikola",
                            IsBlocked = false,
                            LastName = "Nikolic",
                            Password = "guest2",
                            PhoneNumber = "123456789",
                            UserType = 1
                        },
                        new
                        {
                            Jmbg = "3333333333333",
                            Email = "guest3@gmail.com",
                            FirstName = "Jovana",
                            IsBlocked = false,
                            LastName = "Jovanic",
                            Password = "guest3",
                            PhoneNumber = "123456789",
                            UserType = 1
                        });
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Owner", b =>
                {
                    b.HasBaseType("SimsProjekat.Domain.Models.User");

                    b.ToTable("Owner");

                    b.HasData(
                        new
                        {
                            Jmbg = "4444444444444",
                            Email = "owner1@gmail.com",
                            FirstName = "Mara",
                            IsBlocked = false,
                            LastName = "Maric",
                            Password = "owner1",
                            PhoneNumber = "123456789",
                            UserType = 2
                        },
                        new
                        {
                            Jmbg = "5555555555555",
                            Email = "owner2@gmail.com",
                            FirstName = "Nikola",
                            IsBlocked = false,
                            LastName = "Nikolic",
                            Password = "owner2",
                            PhoneNumber = "123456789",
                            UserType = 2
                        },
                        new
                        {
                            Jmbg = "6666666666666",
                            Email = "owner3@gmail.com",
                            FirstName = "Jovana",
                            IsBlocked = false,
                            LastName = "Jovanic",
                            Password = "owner3",
                            PhoneNumber = "123456789",
                            UserType = 2
                        });
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Apartment", b =>
                {
                    b.HasOne("SimsProjekat.Domain.Models.Hotel", "Hotel")
                        .WithMany("Apartments")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Hotel", b =>
                {
                    b.HasOne("SimsProjekat.Domain.Models.Owner", "Owner")
                        .WithMany("Hotels")
                        .HasForeignKey("OwnerJmbg")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Reservation", b =>
                {
                    b.HasOne("SimsProjekat.Domain.Models.Apartment", "Apartment")
                        .WithMany()
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimsProjekat.Domain.Models.Guest", "Guest")
                        .WithMany("Reservations")
                        .HasForeignKey("GuestJmbg")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Admin", b =>
                {
                    b.HasOne("SimsProjekat.Domain.Models.User", null)
                        .WithOne()
                        .HasForeignKey("SimsProjekat.Domain.Models.Admin", "Jmbg")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Guest", b =>
                {
                    b.HasOne("SimsProjekat.Domain.Models.User", null)
                        .WithOne()
                        .HasForeignKey("SimsProjekat.Domain.Models.Guest", "Jmbg")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Owner", b =>
                {
                    b.HasOne("SimsProjekat.Domain.Models.User", null)
                        .WithOne()
                        .HasForeignKey("SimsProjekat.Domain.Models.Owner", "Jmbg")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Hotel", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Guest", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("SimsProjekat.Domain.Models.Owner", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
